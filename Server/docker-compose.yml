services:
  web:
    image: mynginx
    build: 
      context: ./nginx
    ports:
      - 30001:80
    depends_on:
      server:
        condition: service_started
      server2:
        condition: service_started
    networks:  # 新增网络配置
      - btygoose_net
  server:
    build:
      context: ./server
    image: btygoose
    environment:
      - TZ=Asia/Shanghai  # 设置时区变量
      - LANG=C.UTF-8      # 同步语言编码
    # ======= 仅测试使用  ======
    # privileged: true
    # ======== end =========
    # ports:
    #   - 30001:80
    depends_on:
      db:
        condition: service_healthy
      redismaster:  
        condition: service_healthy
    networks:  # 新增网络配置
      - btygoose_net

  server2:
    image: btygoose
    environment:
      - TZ=Asia/Shanghai  # 设置时区变量
      - LANG=C.UTF-8      # 同步语言编码
    depends_on:
      db:
        condition: service_healthy
      redismaster:  
        condition: service_healthy
    networks:  
      - btygoose_net
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "Password!1"
    volumes:
      - ./mysql/varlib/:/var/lib/mysql 
      - ./mysql/initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: mysql -uroot -pPassword!1 -e 'select 1'
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 30006:3306
    networks:  
      - btygoose_net

  redismaster:
    image: redis:7.2.4
    restart: always
    volumes:
    - ./redis/data:/data
    - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf  # 加载配置
    environment:
    - TZ=Asia/Shanghai
    - REDIS_PASSWORD=redispass123  # 设置访问密码
    - maxmemory=512mb     # 限定内存大小
    - maxmemory-policy=allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:  
      - btygoose_net

networks:  # 新增网络定义
  btygoose_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16  # 自定义子网
